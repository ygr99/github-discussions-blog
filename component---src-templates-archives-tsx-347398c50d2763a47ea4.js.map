{"version":3,"file":"component---src-templates-archives-tsx-347398c50d2763a47ea4.js","mappings":"+JA8BA,IAlBgC,SAACA,GAC/B,IAAMC,EAASD,EAAMC,OACrB,OACEC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,eACbD,EAAAA,cAAAA,OAAAA,CACEC,UAAU,SACVC,MAAOH,EAAOI,IACdC,QAAS,kBAAMC,EAAAA,EAAAA,IAAGN,EAAOI,OAEzBH,EAAAA,cAAAA,MAAAA,CAAKM,IAAKP,EAAOQ,UAAWC,IAAKT,EAAOU,QACxCT,EAAAA,cAAAA,OAAAA,KAAOD,EAAOU,QAEfX,EAAMY,MAAQV,EAAAA,cAAAA,IAAAA,CAAGC,UAAU,SAAQU,EAAAA,EAAAA,IAAQb,EAAMY,OACjDZ,EAAMc,S,iECeb,IA1BsC,SAACd,GACrC,IAEIe,EAFEC,GAAUC,EAAAA,EAAAA,KAGhB,OAAQD,EAAQE,MACd,IAAK,SACHH,EAAK,sBAAyBC,EAAQG,aAAjC,IAAiDH,EAAQI,YAAzD,WAA+EpB,EAAMqB,OAC1F,MACF,IAAK,eACHN,EAAK,sBAAyBC,EAAQM,UAAjC,IAA8CN,EAAQO,SAAtD,gBAA8EvB,EAAMqB,OACzF,MACF,QACEN,EAAK,sBAAyBC,EAAQQ,MAAjC,IAA0CR,EAAQS,KAAlD,gBAAsEzB,EAAMqB,OAGrF,OACEnB,EAAAA,cAAAA,IAAAA,CACEC,WAAWuB,EAAAA,EAAAA,GAAK,oBAAqB1B,EAAMG,WAC3CwB,KAAMZ,EACNa,OAAO,UAEN5B,EAAM6B,KAAMC,EAAAA,EAAAA,IAAU9B,EAAMqB,OAAQrB,EAAM6B,KAA1C7B,IAAqDA,EAAMqB,U,wHC1BnD,SAASU,EAAU/B,GAChC,OACEE,EAAAA,cAAC8B,EAAAA,EAAD,CAAQ7B,UAAU,aAChBD,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,6BACbD,EAAAA,cAAAA,MAAAA,KACGF,EAAMiC,KAAKC,mBAAmBC,MAAMC,KAAI,YAAoB,IAAjBC,EAAgB,EAAhBA,KAC1C,IAAKA,EAAM,OAAO,KAEDA,MAAAA,GAAAA,EAAMC,SAEvB,OACEpC,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,OAAOoC,IAAKF,EAAKhB,QAC9BnB,EAAAA,cAACsC,EAAAA,EAAD,CACEvC,OAAQoC,EAAKpC,OACbW,KAAMyB,EAAKI,UACX3B,MAAOZ,EAAAA,cAACwC,EAAAA,EAAD,CAAWrB,OAAQgB,EAAKhB,WAEjCnB,EAAAA,cAAAA,MAAAA,CAAKC,UAAU,aACbD,EAAAA,cAACyC,EAAAA,KAAD,CAAMxC,UAAU,QAAQyC,GAAE,WAAaP,EAAKhB,QACzCgB,EAAKjC","sources":["webpack://github-discussions-blog/./src/components/author/index.tsx","webpack://github-discussions-blog/./src/components/issues_num/index.tsx","webpack://github-discussions-blog/./src/templates/archives.tsx"],"sourcesContent":["import React, { FC } from 'react';\n\nimport { go, fmtDate } from '@utils/tools';\n\nimport './index.scss';\n\ninterface AuthorProps {\n  author: any;\n  date?: Date;\n  extra?: React.ReactNode;\n}\n\nconst Author: FC<AuthorProps> = (props) => {\n  const author = props.author;\n  return (\n    <div className=\"author-info\">\n      <span\n        className=\"author\"\n        title={author.url}\n        onClick={() => go(author.url)}\n      >\n        <img src={author.avatarUrl} alt={author.login} />\n        <span>{author.login}</span>\n      </span>\n      {props.date && <i className=\"date\">{fmtDate(props.date)}</i>}\n      {props.extra}\n    </div>\n  );\n};\n\nexport default Author;\n","import React, { FC } from 'react';\nimport clsx from 'clsx';\n\nimport { fmtIssues } from '@utils/tools';\nimport useRgd from '@hooks/useRgd';\n\nimport './index.scss';\n\ninterface IssuesNumProps {\n  number: number;\n  len?: number;\n  className?: string;\n}\n\nconst IssuesNum: FC<IssuesNumProps> = (props) => {\n  const rgdData = useRgd();\n\n  let _link;\n  switch (rgdData.type) {\n    case 'issues':\n      _link = `https://github.com/${rgdData.issues_owner}/${rgdData.issues_repo}/issues/${props.number}`;\n      break;\n    case 'discussions2':\n      _link = `https://github.com/${rgdData.dis_owner}/${rgdData.dis_repo}/discussions/${props.number}`;\n      break;\n    default:\n      _link = `https://github.com/${rgdData.owner}/${rgdData.repo}/discussions/${props.number}`;\n  }\n\n  return (\n    <a\n      className={clsx('number issues-num', props.className)}\n      href={_link}\n      target=\"_blank\"\n    >\n      {props.len ? fmtIssues(props.number, props.len) : `#${props.number}`}\n    </a>\n  );\n};\n\nexport default IssuesNum;\n","import React from 'react';\nimport { graphql, Link } from 'gatsby';\n\nimport Layout from '@layouts/base';\nimport Author from '@comps/author';\nimport Category from '@comps/category';\nimport IssuesNum from '@comps/issues_num';\nimport '@styles/home.scss';\n\nexport default function IndexPage(props: any) {\n  return (\n    <Layout className=\"home-page\">\n      <div className=\"markdown-body issues-list\">\n        <div>\n          {props.data.allDiscussionsJson.nodes.map(({ node }: any) => {\n            if (!node) return null;\n\n            const category = node?.category;\n\n            return (\n              <div className=\"item\" key={node.number}>\n                <Author\n                  author={node.author}\n                  date={node.updatedAt}\n                  extra={<IssuesNum number={node.number} />}\n                />\n                <div className=\"post-info\">\n                  <Link className=\"title\" to={`/issues/${node.number}`}>\n                    {node.title}\n                  </Link>\n\n                </div>\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const query = graphql`\n  {\n    allDiscussionsJson {\n      nodes {\n        node {\n          number\n          title\n          updatedAt\n          author {\n            avatarUrl\n            login\n            url\n          }\n          category {\n            name\n            isAnswerable\n            emoji\n          }\n        }\n      }\n    }\n  }\n`;\n"],"names":["props","author","React","className","title","url","onClick","go","src","avatarUrl","alt","login","date","fmtDate","extra","_link","rgdData","useRgd","type","issues_owner","issues_repo","number","dis_owner","dis_repo","owner","repo","clsx","href","target","len","fmtIssues","IndexPage","Layout","data","allDiscussionsJson","nodes","map","node","category","key","Author","updatedAt","IssuesNum","Link","to"],"sourceRoot":""}